var restaurant,newMap;function ImgError(){this.classList.add("style-image-alt"),this.onmousemove=null}function toggleFav(){const e=this.classList.contains("yes");DBHelper.fav(this.dataset.id,!e),this.classList.toggle("yes");const[t,a]=e?["add","remove"]:["remove","add"];this.setAttribute("aria-label",this.getAttribute("aria-label").replace(t,a))}function format_time(e){const[,t,a,n]=new Date(e).toDateString().split(" ");return`${t} ${a}, ${n}`}document.addEventListener("DOMContentLoaded",e=>{initMap();for(const e of $$(".star"))e.addEventListener("click",function(){if(this.classList.contains("sel"))this.classList.remove("sel");else{const e=$(".star.sel");e&&e.classList.remove("sel"),this.classList.add("sel")}});$("#post-review .cls").addEventListener("click",()=>{const e=$(".star");$("#user_name").value="",e.classList.contains("sel")&&e.classList.remove("sel"),$("#post-review textarea").value=""});for(const e of $$("#post-review input, #post-review textarea"))e.addEventListener("keydown",function({keyCode:e}){27===e&&(this.value="")});$("#post-review .snd").addEventListener("click",function(){const e={restaurant_id:getParameterByName("id"),name:$("#user_name").value,rating:$(".star.sel")?$(".star.sel").className.split(" ")[1]:void 0,comments:$("#post-review textarea").value};for(const[t,a]of Object.entries(e))if(!a)return Toast.show(`${t} value is empty`);const t=`http://${location.hostname}:1337/reviews/`;fetch(t,{method:"POST",body:JSON.stringify(e)}).then(e=>{if(e.ok)return e.json();throw new Error(e.status)}).then(e=>{store.add("reviews",e).then(()=>{location.reload()})}).catch(()=>{Toast.show("Failed to add New Review to Server, We will try again later"),Sync.add({type:"rev",method:"POST",url:t,json:e}).then(()=>{})})})}),initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(window.newMap=L.map("map",{center:[t.latlng.lat,t.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1Ijoic2lkNyIsImEiOiJjamp1OGJvd2QwMzAzM3ByejRnd2x2NXY4In0.fkA6CjOQbzCkLVqJ1Wm4lA",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(t,window.newMap),restaurant=t)})}),fetchRestaurantFromURL=(e=>{if(window.restaurant)return void e(null,window.restaurant);let t=getParameterByName("id");t?(t=Number(t),DBHelper.fetchRestaurantWithReview(t,(a,n)=>{if(!n)return restaurant=n,void console.error(a);a&&Toast.show("Failed to get Reviews, try again later"),DBHelper.fetchLocalReviewsById(t).then(t=>{(restaurant=n).local_reviews=t,fillRestaurantHTML(),e(null,restaurant)})})):(error="No restaurant id in URL",e(error,null),Toast.show("Invalid URL"))}),imgHov=(({pageX:e,pageY:t,target:a})=>{const n=(e-a.offsetLeft)/a.width*100+"% "+(t-a.offsetTop)/a.height*100+"%";a.style.cssText="transform-origin: "+n}),fillRestaurantHTML=((e=window.restaurant)=>{const t=document.getElementById("restaurant-name");t.innerHTML=e.name,$("title").textContent+=e.name,$("#post-review textarea").setAttribute("placeholder",`Write your views about ${e.name}`);const a=document.createElement("button");a.textContent="❤";let n=!!e.is_favorite&&JSON.parse(e.is_favorite);const r=localStorage.getItem("loc_rest_fav");r&&(n=JSON.parse(r)[e.id]||n),a.className="is-fav"+(n?" yes":""),a.dataset.id=e.id,a.onclick=toggleFav,a.setAttribute("aria-label",`click to ${n?"remove":"add"} ${e.name} to favorite`),t.append(a),document.getElementById("restaurant-address").innerHTML=e.address;const s=document.getElementById("restaurant-img");s.className="restaurant-img",s.src=DBHelper.imageUrlForRestaurant(e.photograph),s.alt=`Image of ${e.name} Restaurant`,s.onmousemove=imgHov,s.onerror=ImgError,document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=window.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let a in e){const n=document.createElement("tr"),r=document.createElement("th");r.innerHTML=a,n.appendChild(r);const s=document.createElement("td");s.innerHTML=e[a],n.appendChild(s),t.appendChild(n)}}),fillReviewsHTML=((e=window.restaurant.reviews,t=window.restaurant.local_reviews)=>{const a=document.getElementById("reviews-container"),n=document.createElement("h2");if(n.innerHTML="Reviews",a.appendChild(n),!e&&0===t.length){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void a.appendChild(e)}const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(e))}),0!==t.length&&t.forEach(e=>{r.appendChild(createReviewHTML(e,!0))}),a.appendChild(r)}),star=(e=>["☆","☆","☆","☆","☆"].fill("★",0,e).join("")),createReviewHTML=((e,t)=>{const a=document.createElement("li");a.setAttribute("tabindex",0),a.setAttribute("aria-label","Review");const n=document.createElement("p");n.classList.add("user-name"),n.setAttribute("aria-label","Review by"),n.innerHTML=e.name,a.appendChild(n);const r=document.createElement("p");r.classList.add("date"),r.innerHTML=t?"Offline Review":format_time(e.createdAt),e.createdAt-e.updatedAt!=0&&(r.title=`edit: ${format_time(e.updatedAt)}`),r.setAttribute("aria-label","Review post date"),a.appendChild(r);const s=document.createElement("p");s.classList.add("rate"),s.innerHTML=`Rating: <span>${star(e.rating)}</span>`,s.setAttribute("aria-label",`Review rating - ${e.rating}`),a.appendChild(s);const i=document.createElement("p");return i.classList.add("comments"),i.innerHTML=e.comments,i.setAttribute("aria-label","Review text"),a.appendChild(i),a}),fillBreadcrumb=((e=window.restaurant)=>{const t=document.querySelector("#breadcrumb ol"),a=document.createElement("li");a.innerHTML=e.name,a.setAttribute("aria-current","page"),t.appendChild(a)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const a=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
