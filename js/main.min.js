let restaurants,neighborhoods,cuisines;var newMap,markers=[];function ImgError(){this.classList.add("style-image-alt"),this.onmousemove=null}function toggleFav(){this.classList.toggle("yes");const[e,t]=this.classList.contains("yes")?["add","remove"]:["remove","add"];this.setAttribute("aria-label",this.getAttribute("aria-label").replace(e,t))}document.addEventListener("DOMContentLoaded",e=>{initMap(),fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),initMap=(()=>{self.newMap=L.map("map",{center:[40.722216,-73.987501],zoom:12,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1Ijoic2lkNyIsImEiOiJjamp1OGJvd2QwMzAzM3ByejRnd2x2NXY4In0.fkA6CjOQbzCkLVqJ1Wm4lA",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),s=e.selectedIndex,a=t.selectedIndex,n=e[s].value,o=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(n,o,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers&&self.markers.forEach(e=>e.remove()),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap()}),imgHov=(({pageX:e,pageY:t,target:s})=>{const a=(e-s.offsetLeft)/s.width*100+"% "+(t-s.offsetTop)/s.height*100+"%";s.style.cssText="transform-origin: "+a}),createRestaurantHTML=(e=>{const t=document.createElement("li"),s=document.createElement("div");t.setAttribute("tabindex",0),s.className="img-container";const a=document.createElement("img");a.className="restaurant-img",a.src=DBHelper.imageUrlForRestaurant(e.photograph),a.alt=`Image of ${e.name} Restaurant`,a.onmousemove=imgHov,a.onerror=ImgError,s.append(a),t.append(s);const n=document.createElement("h2");n.innerHTML=e.name,t.append(n);const o=document.createElement("button");o.textContent="❤";const r=JSON.parse(e.is_favorite);o.className="is-fav"+(r?" yes":""),o.onclick=toggleFav,o.setAttribute("aria-label",`click to ${r?"remove":"add"} ${e.name} to favorite`),n.append(o);const i=document.createElement("p");i.innerHTML=e.neighborhood,t.append(i);const l=document.createElement("p");l.innerHTML=e.address,t.append(l);const c=document.createElement("a");return c.innerHTML="View Details",c.href=DBHelper.urlForRestaurant(e),c.setAttribute("aria-label",`Click to open ${e.name}'s details page`),t.append(c),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.newMap);t.on("click",function(){window.location.href=t.options.url}),self.markers.push(t)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
