var restaurants,neighborhoods,cuisines,newMap,markers=[];function ImgError(){this.classList.add("style-image-alt"),this.onmousemove=null}function toggleFav(){const e=this.classList.contains("yes");DBHelper.fav(this.dataset.id,!e),this.classList.toggle("yes");const[t,a]=e?["add","remove"]:["remove","add"];this.setAttribute("aria-label",this.getAttribute("aria-label").replace(t,a))}document.addEventListener("DOMContentLoaded",()=>{initMap(),fetchNeighborhoods(),fetchCuisines(),addEventListener("online",Sync.do),addEventListener("offline",function(){Toast.show("You are offline!")})}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const a=document.createElement("option");a.innerHTML=e,a.value=e,t.append(a)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const a=document.createElement("option");a.innerHTML=e,a.value=e,t.append(a)})}),initMap=(()=>{newMap=L.map("map",{center:[40.722216,-73.987501],zoom:12,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1Ijoic2lkNyIsImEiOiJjamp1OGJvd2QwMzAzM3ByejRnd2x2NXY4In0.fkA6CjOQbzCkLVqJ1Wm4lA",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),a=e.selectedIndex,n=t.selectedIndex,o=e[a].value,s=t[n].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(o,s,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})}),resetRestaurants=(e=>{restaurants=[],document.getElementById("restaurants-list").innerHTML="",markers&&markers.forEach(e=>e.remove()),markers=[],restaurants=e}),fillRestaurantsHTML=((e=restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap()}),imgHov=(({pageX:e,pageY:t,target:a})=>{const n=(e-a.offsetLeft)/a.width*100+"% "+(t-a.offsetTop)/a.height*100+"%";a.style.cssText="transform-origin: "+n}),createRestaurantHTML=(e=>{const t=document.createElement("li"),a=document.createElement("div");t.setAttribute("tabindex",0),a.className="img-container";const n=document.createElement("img");n.className="restaurant-img",n.src=DBHelper.imageUrlForRestaurant(e.photograph),n.alt=`Image of ${e.name} Restaurant`,n.onmousemove=imgHov,n.onerror=ImgError,a.append(n),t.append(a);const o=document.createElement("h2");o.innerHTML=e.name,t.append(o);const s=document.createElement("button");s.textContent="❤";let r=!!e.is_favorite&&JSON.parse(e.is_favorite);const i=localStorage.getItem("loc_rest_fav");i&&(r=JSON.parse(i)[e.id]||r),s.className="is-fav"+(r?" yes":""),s.dataset.id=e.id,s.onclick=toggleFav,s.setAttribute("aria-label",`click to ${r?"remove":"add"} ${e.name} to favorite`),o.append(s);const c=document.createElement("p");c.innerHTML=e.neighborhood,t.append(c);const l=document.createElement("p");l.innerHTML=e.address,t.append(l);const d=document.createElement("a");return d.innerHTML="View Details",d.href=DBHelper.urlForRestaurant(e),d.setAttribute("aria-label",`Click to open ${e.name}'s details page`),t.append(d),t}),addMarkersToMap=((e=restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,newMap);t.on("click",function(){window.location.href=t.options.url}),markers.push(t)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
